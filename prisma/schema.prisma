datasource db {
  provider          = "postgresql"
  url               = env("MY_POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl         = env("MY_POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("MY_POSTGRES_URL_NON_POOLING") // used for migrations
  extensions        = [pg_trgm]
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol", "postgresqlExtensions"]
}

model Player {
  firstName   String
  lastName    String
  yearStart   String
  yearEnd     String
  profilePic  String?
  position    String?
  pff_page    String?
  fbdb_page   String?
  Player_Team Player_Team[]
  college     String?
  id          Int           @unique @default(autoincrement())
  Answers Answers[]

  @@id([firstName, lastName, yearStart, yearEnd])
}

model Player_Team {
  teamName        Team
  player          Player @relation(fields: [playerFirstName, playerLastName, playerYearStart, playerYearEnd], references: [firstName, lastName, yearStart, yearEnd])
  playerFirstName String
  playerLastName  String
  playerYearStart String
  playerYearEnd   String

  @@id([teamName, playerFirstName, playerLastName, playerYearStart, playerYearEnd])
}

model Grid {
  day        DateTime @unique @db.Date
  a_team     Team
  b_team     Team
  c_team     Team
  one_team   Team
  two_team   Team
  three_team Team
}

model Answers {
  team1    Team
  team2    Team
  player   Player @relation(fields: [playerId], references: [id])
  playerId Int
  count    Int

  @@id([team1, team2, playerId])
}

enum Team {
  MIA
  HOU
  BAL
  JAX
  CAR
  TB
  SEA
  CIN
  NO
  ATL
  MIN
  BUF
  TEN
  LV
  NE
  NYJ
  DEN
  LAC
  KC
  DAL
  IND
  CLE
  SF
  LA
  PIT
  PHI
  WAS
  DET
  NYG
  GB
  CHI
  ARI
}
